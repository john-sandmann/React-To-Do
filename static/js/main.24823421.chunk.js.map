{"version":3,"sources":["Components/MyNavbar.js","Components/MyCalendar.js","Components/MyTodos.js","App.js","index.js"],"names":["MyNavbar","props","state","todo_to_add","status","date","Date","getDate","getMonth","getFullYear","React","createRef","handleSubmit","bind","makeid","texto","localStorage","setItem","this","JSON","stringify","window","location","reload","alert","length","result","characters","charactersLength","i","charAt","Math","floor","random","event","preventDefault","undefined","add","Navbar","bg","variant","Brand","Form","inline","FormControl","onChange","setState","target","value","type","placeholder","className","as","custom","id","style","ref","e","v","current","match","maxLength","Button","marginLeft","onClick","Component","MyCalendar","dateContext","moment","today","showMonthPopup","showYearPopup","selectedDate","year","format","month","monthNumber","daysInMonth","currentDate","get","currentDay","firstDayOfMonth","startOf","weekdays","weekdaysShort","months","map","day","key","blanks","push","handleSelectedDateChange","d","tasks","split","includes","onClickDay","totalSlots","rows","cells","forEach","row","insertRow","slice","trElems","MyTodos","allDates","dates","keys","Object","obj","parse","numberOfTasks","renderTodo","todo","index","ListGroup","Item","renderStatus","changeStatus","selected","renderSelect","del","applyFilter","filterDate","todos","allStorage","values","getItem","removeItem","newStatus","item","Alert","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24823421.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Button, Form, FormControl } from 'react-bootstrap';\r\n\r\nclass MyNavbar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            todo_to_add: '',\r\n            status: 'urgent',\r\n            date: new Date().getDate() + '/' + ( new Date().getMonth() + 1 ) + '/' + new Date().getFullYear(),\r\n        }\r\n\r\n        this.date = React.createRef();\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.makeid = this.makeid.bind(this);\r\n    }\r\n\r\n    add(texto, status, date) {\r\n        if (localStorage) {\r\n            localStorage.setItem(this.makeid(10), JSON.stringify({ texto: texto, status: status, date: date }));\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            alert('Your browser does not support localStorage');\r\n        }\r\n    }\r\n\r\n    makeid(length) {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    handleSubmit(texto, status, date, event) {\r\n        event.preventDefault();\r\n        if (texto !== undefined && texto.length !== 0) {\r\n            this.add(texto, status, date);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand>\r\n                    React To-do List\r\n                </Navbar.Brand>\r\n                <Form inline>\r\n                    <FormControl onChange={(event) => this.setState({ todo_to_add: event.target.value })} type=\"text\" placeholder=\"Write here\" className=\"mr-sm-2\" />\r\n                    <FormControl as=\"select\" custom onChange={(event) => { this.setState({ status: event.target.value }); }}>\r\n                        <option id=\"urgent\" value=\"urgent\" >Urgent</option>\r\n                        <option id=\"medium\" value=\"medium\" >Medium</option>\r\n                        <option id=\"noturgent\" value=\"noturgent\" >Not urgent</option>\r\n                    </FormControl>\r\n                    <FormControl\r\n                        style={{\r\n                            'marginLeft': '10px'\r\n                        }}\r\n                        value={this.state.date}\r\n                        type=\"text\"\r\n                        id=\"date\"\r\n                        placeholder=\"DD/MM/YYYY\"\r\n                        ref={this.date}\r\n                        onChange={(e) => {\r\n                            var v = this.date.current.value;\r\n                            if (v.match(/^\\d{2}$/) !== null) {\r\n                                this.date.current.value = v + '/';\r\n                            } else if (v.match(/^\\d{2}\\/\\d{2}$/) !== null) {\r\n                                this.date.current.value = v + '/';\r\n                            }\r\n                            this.setState({ date: e.target.value});\r\n                        }\r\n                        }\r\n                        maxLength=\"10\"\r\n                    ></FormControl>\r\n                    <Button style={{ marginLeft: \"10px\" }} variant=\"outline-success\" onClick={(event) => { this.handleSubmit(this.state.todo_to_add, this.state.status, this.state.date, event); }}>Add To-do</Button>\r\n                </Form>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyNavbar;\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport '../Sass/MyCalendar.scss';\r\n\r\nclass MyCalendar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            dateContext: moment(),\r\n            today: moment(),\r\n            showMonthPopup: false,\r\n            showYearPopup: false,\r\n\r\n            selectedDate: '',\r\n        }\r\n\r\n        this.year = () => this.state.dateContext.format('Y');\r\n\r\n        this.month = () => this.state.dateContext.format('MMMM');\r\n\r\n        this.monthNumber = () => this.state.dateContext.format('M');\r\n\r\n        this.daysInMonth = () => this.state.dateContext.daysInMonth();\r\n\r\n        this.currentDate = () => this.state.dateContext.get('date');\r\n\r\n        this.currentDay = () => this.state.dateContext.format('D');\r\n\r\n        this.firstDayOfMonth = () => moment(this.state.dateContext).startOf('month').format('d');\r\n\r\n        this.weekdays = moment.weekdays();\r\n\r\n        this.weekdaysShort = moment.weekdaysShort();\r\n\r\n        this.months = moment.months();\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let weekdays = this.weekdaysShort.map((day) => {\r\n            return (\r\n                <td key={day} className='week-day'>{day}</td>\r\n            )\r\n        });\r\n\r\n        let blanks = [];\r\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\r\n            blanks.push(\r\n                <td key={i * 80} className='emptySlot'>\r\n                    {\"\"}\r\n                </td>\r\n            );\r\n        }\r\n\r\n        this.handleSelectedDateChange = (date) => {\r\n            if (date == this.state.selectedDate) {\r\n                this.setState({ selectedDate: '' });\r\n            }\r\n            else {\r\n                this.setState({ selectedDate: date });\r\n            }\r\n        }\r\n\r\n        let daysInMonth = [];\r\n        for (let d = 1; d <= this.daysInMonth(); d++) {\r\n            let className = (d == this.currentDay() ? 'day current-day' : 'day');\r\n            if (this.props.tasks) {\r\n                this.props.tasks.map((date, i) => {\r\n                    if (date) {\r\n                        if (date.match(/^(0?[1-9]|[12][0-9]|3[01])[\\/\\-](0?[1-9]|1[012])[\\/\\-]\\d{4}$/)) {\r\n                            if (date.split('/')[0] == d && date.split('/')[1] == this.monthNumber() && date.split('/')[2] == this.year()) {\r\n                                if (!className.includes(' taskday')) {\r\n                                    className += ' taskday'\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            daysInMonth.push(\r\n                <td key={d} className={className}>\r\n                    <span style={{ 'cursor': 'pointer', 'fontWeight': this.state.selectedDate === `${d}/${this.monthNumber()}/${this.year()}` ? '900' : '200' }} onClick={() => { this.props.onClickDay(`${d}/${this.monthNumber()}/${this.year()}`); this.handleSelectedDateChange(`${d}/${this.monthNumber()}/${this.year()}`); }}>{d}</span>\r\n                </td>\r\n            );\r\n        }\r\n\r\n        var totalSlots = [...blanks, ...daysInMonth]\r\n        let rows = [];\r\n        let cells = [];\r\n\r\n        totalSlots.forEach((row, i) => {\r\n            if ((i % 7) !== 0) {\r\n                cells.push(row);\r\n            } else {\r\n                let insertRow = cells.slice();\r\n                rows.push(insertRow);\r\n                cells = [];\r\n                cells.push(row);\r\n                if (i === totalSlots.length - 1) {\r\n                    let insertRow = cells.slice();\r\n                    rows.push(insertRow);\r\n                }\r\n            }\r\n        });\r\n\r\n        let trElems = rows.map((d, i) => {\r\n            return (\r\n                <tr key={i * 100}>\r\n                    {d}\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className='calendar-container'>\r\n                <table className='calendar'>\r\n                    <thead>\r\n                        <tr className='calendar-header'>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            {weekdays}\r\n                        </tr>\r\n                        {trElems}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyCalendar;","import React, { Component } from 'react';\r\nimport { ListGroup, Button, FormControl, Alert } from 'react-bootstrap';\r\n\r\nimport MyCalendar from './MyCalendar';\r\n\r\nclass MyTodos extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            todos: [],\r\n\r\n            applyFilter: false,\r\n            filterDate: '',\r\n            allDates: this.allDates(),\r\n        }\r\n\r\n        this.allStorage = this.allStorage.bind(this);\r\n        this.renderTodo = this.renderTodo.bind(this);\r\n        this.applyFilter = this.applyFilter.bind(this);\r\n        this.allDates = this.allDates.bind(this);\r\n    }\r\n\r\n    allDates = () => { \r\n        var dates = [],\r\n        keys = Object.keys(localStorage),\r\n        i = keys.length;\r\n\r\n        while (i--) {\r\n            try{\r\n                let obj = JSON.parse(localStorage[keys[i]]);\r\n                if(obj.date){\r\n                    dates.push(obj.date);\r\n                }\r\n            } catch (e) {}\r\n        }\r\n\r\n        return dates;\r\n    }\r\n\r\n    allStorage() {\r\n\r\n        var values = [],\r\n            keys = Object.keys(localStorage),\r\n            i = keys.length;\r\n\r\n        while (i--) {\r\n            try {\r\n                let obj = JSON.parse(localStorage.getItem(keys[i]));\r\n                if (this.state.applyFilter) {\r\n                    if (this.state.filterDate == obj.date) {\r\n                        values.push({ id: keys[i], texto: obj.texto, status: obj.status, date: obj.date });\r\n                    }\r\n                }\r\n                else {\r\n                    values.push({ id: keys[i], texto: obj.texto, status: obj.status, date: obj.date });\r\n                }\r\n            }\r\n            catch {\r\n                try {\r\n                    let obj = JSON.parse(localStorage.getItem(keys[i]));\r\n                    if (this.state.applyFilter) {\r\n                        if (this.state.filterDate == obj.date) {\r\n                            values.push({ id: keys[i], texto: obj.texto, status: obj.status, date: obj.date });\r\n                        }\r\n                    }\r\n                    else {\r\n                        values.push({ id: keys[i], texto: obj.texto, status: obj.status, date: obj.date });\r\n                    }\r\n                } catch (e) {\r\n                    let texto = localStorage.getItem(keys[i]);\r\n                    values.push({ id: keys[i], texto: texto });\r\n                }\r\n            }\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    numberOfTasks = () => Object.keys(localStorage).length;\r\n\r\n    componentDidMount() {\r\n        if (localStorage) {\r\n            this.setState({\r\n                todos: this.allStorage(),\r\n            });\r\n        }\r\n    }\r\n\r\n    del(id) {\r\n        localStorage.removeItem(id);\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    changeStatus(id, newStatus) {\r\n        let item = JSON.parse(localStorage.getItem(id));\r\n        item.status = newStatus;\r\n        item = JSON.stringify(item);\r\n        localStorage.setItem(id, item);\r\n    }\r\n\r\n    renderTodo = (todo, index) => {\r\n\r\n        var renderText = (texto, date) => {\r\n            if (date) {\r\n                return `${texto} (${date})`;\r\n            }\r\n            else {\r\n                return texto;\r\n            }\r\n        }\r\n\r\n        var renderStatus = (status) => {\r\n            switch (status) {\r\n                case 'urgent':\r\n                    return <div style={{ 'marginLeft': '30px', 'backgroundColor': 'rgb(179, 0, 0)', 'width': '30px', 'height': '30px', 'borderRadius': '50%' }}></div>\r\n                case 'medium':\r\n                    return <div style={{ 'marginLeft': '30px', 'backgroundColor': 'rgb(209, 209, 0)', 'width': '30px', 'height': '30px', 'borderRadius': '50%' }}></div>\r\n                case 'noturgent':\r\n                    return <div style={{ 'marginLeft': '30px', 'backgroundColor': 'rgb(5, 160, 44)', 'width': '30px', 'height': '30px', 'borderRadius': '50%' }}></div>\r\n            }\r\n        }\r\n\r\n        var renderSelect = (status) => {\r\n            switch (status) {\r\n                case 'urgent':\r\n                    return <FormControl style={{ 'width': '100px', 'marginLeft': '30px' }} as=\"select\" custom onChange={(event) => { this.changeStatus(todo.id, event.target.value); window.location.reload() }}>\r\n                        <option selected id=\"urgent\" value=\"urgent\" >Urgent</option>\r\n                        <option id=\"medium\" value=\"medium\" >Medium</option>\r\n                        <option id=\"noturgent\" value=\"noturgent\" >Not urgent</option>\r\n                    </FormControl>\r\n                case 'medium':\r\n                    return <FormControl style={{ 'width': '100px', 'marginLeft': '30px' }} as=\"select\" custom onChange={(event) => { this.changeStatus(todo.id, event.target.value); window.location.reload() }}>\r\n                        <option id=\"urgent\" value=\"urgent\" >Urgent</option>\r\n                        <option selected id=\"medium\" value=\"medium\" >Medium</option>\r\n                        <option id=\"noturgent\" value=\"noturgent\" >Not urgent</option>\r\n                    </FormControl>\r\n                case 'noturgent':\r\n                    return <FormControl style={{ 'width': '100px', 'marginLeft': '30px' }} as=\"select\" custom onChange={(event) => { this.changeStatus(todo.id, event.target.value); window.location.reload() }}>\r\n                        <option id=\"urgent\" value=\"urgent\" >Urgent</option>\r\n                        <option id=\"medium\" value=\"medium\" >Medium</option>\r\n                        <option selected id=\"noturgent\" value=\"noturgent\" >Not urgent</option>\r\n                    </FormControl>\r\n            }\r\n        }\r\n\r\n        if (todo.status) {\r\n            return <ListGroup.Item key={index}>\r\n\r\n                <div style={{ 'display': 'flex', 'flexDirection': 'row' }} className=\"align\">\r\n                    {renderText(todo.texto, todo.date)}\r\n                    {renderStatus(todo.status)}\r\n                    {renderSelect(todo.status)}\r\n                </div>\r\n\r\n                <Button\r\n                    className='delete_button'\r\n                    variant='danger'\r\n                    style={{\r\n                        'float': 'right'\r\n                    }}\r\n                    onClick={() => { this.del(todo.id) }}\r\n                >\r\n                    X\r\n                </Button>\r\n\r\n            </ListGroup.Item>\r\n        }\r\n        else {\r\n            return <ListGroup.Item key={index}>\r\n                {todo.texto}\r\n\r\n                <Button\r\n                    className='delete_button'\r\n                    variant='danger'\r\n                    style={{\r\n                        'float': 'right'\r\n                    }}\r\n                    onClick={() => { this.del(todo.id) }}\r\n                >\r\n                    X\r\n        </Button>\r\n\r\n            </ListGroup.Item>\r\n        }\r\n    }\r\n\r\n    applyFilter = (date) => {\r\n        if (date == this.state.filterDate) {\r\n            this.setState({\r\n                filterDate: date,\r\n                applyFilter: false\r\n            }, () => {\r\n                this.setState({ todos: this.allStorage() });\r\n            });\r\n        }\r\n        else {\r\n            this.setState({\r\n                filterDate: date,\r\n                applyFilter: true\r\n            }, () => {\r\n                this.setState({ todos: this.allStorage() });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"todos\">\r\n                <div style={{\r\n                    'display': 'flex',\r\n                    'alignItems': 'center',\r\n                    'justifyContent': 'center',\r\n                    'flexDirection': 'column',\r\n                    'textAlign': 'center',\r\n                    'alignItems': 'center',\r\n                }} className=\"center\">\r\n                    <h6 style={{ 'padding': '20px' }}>Any doubts or suggestions please contact <span style={{ 'fontWeight': '900' }}>potato.clicker28@gmail.com</span></h6>\r\n                    <h3 style={{ 'padding': '20px' }}>{this.numberOfTasks()} tasks ramaining</h3>\r\n                    <MyCalendar tasks={this.state.allDates} onClickDay={this.applyFilter} />\r\n                    <Alert variant=\"info\">\r\n                        UPDATE: Now if you click on a day, instead of showing a tooltip, it filters all tasks by date\r\n                    </Alert>\r\n                </div>\r\n                <ListGroup>\r\n                    {this.state.todos.map((todo, index) => {\r\n                        return this.renderTodo(todo, index);\r\n                    })}\r\n                </ListGroup>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyTodos;\r\n","import React, { Component } from 'react';\r\n\r\nimport MyNavbar from './Components/MyNavbar';\r\nimport MyTodos from './Components/MyTodos';\r\n\r\nimport './Sass/App.scss';\r\n\r\nclass App extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      todos: []\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <MyNavbar/>\r\n        <MyTodos/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}