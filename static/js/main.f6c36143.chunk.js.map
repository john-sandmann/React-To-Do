{"version":3,"sources":["Components/MyNavbar.js","Components/MyTodos.js","App.js","index.js"],"names":["MyNavbar","props","state","todo_to_add","status","date","Date","getDay","getMonth","getFullYear","React","createRef","handleSubmit","bind","makeid","texto","localStorage","setItem","this","JSON","stringify","window","location","reload","alert","console","log","length","result","characters","charactersLength","i","charAt","Math","floor","random","event","preventDefault","undefined","add","Navbar","bg","variant","Brand","Form","inline","FormControl","onChange","setState","target","value","type","placeholder","className","as","custom","id","style","ref","e","v","current","match","maxLength","Button","marginLeft","onClick","Component","MyTodos","renderTodo","todo","index","ListGroup","Item","key","renderStatus","changeStatus","selected","renderSelect","del","todos","allStorage","values","keys","Object","obj","parse","getItem","push","removeItem","newStatus","item","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6c36143.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, Button, Form, FormControl } from 'react-bootstrap';\r\n\r\nclass MyNavbar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            todo_to_add: '',\r\n            status: 'urgent',\r\n            date: new Date().getDay() + '/' + new Date().getMonth() + '/' + new Date().getFullYear(),\r\n        }\r\n\r\n        this.date = React.createRef();\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.makeid = this.makeid.bind(this);\r\n    }\r\n\r\n    add(texto, status, date) {\r\n        if (localStorage) {\r\n            localStorage.setItem(this.makeid(10), JSON.stringify({ texto: texto, status: status, date: date }));\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            alert('Your browser does not support localStorage');\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.state.date);\r\n    }\r\n\r\n    makeid(length) {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    handleSubmit(texto, status, date, event) {\r\n        event.preventDefault();\r\n        if (texto !== undefined && texto.length !== 0) {\r\n            this.add(texto, status, date);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand>\r\n                    React To-do List\r\n                </Navbar.Brand>\r\n                <Form inline>\r\n                    <FormControl onChange={(event) => this.setState({ todo_to_add: event.target.value })} type=\"text\" placeholder=\"Write here\" className=\"mr-sm-2\" />\r\n                    <FormControl as=\"select\" custom onChange={(event) => { this.setState({ status: event.target.value }); }}>\r\n                        <option id=\"urgent\" value=\"urgent\" >Urgent</option>\r\n                        <option id=\"medium\" value=\"medium\" >Medium</option>\r\n                        <option id=\"noturgent\" value=\"noturgent\" >Not urgent</option>\r\n                    </FormControl>\r\n                    <FormControl\r\n                        style={{\r\n                            'marginLeft': '10px'\r\n                        }}\r\n                        value={this.state.date}\r\n                        type=\"text\"\r\n                        id=\"date\"\r\n                        placeholder=\"DD/MM/YYYY\"\r\n                        ref={this.date}\r\n                        onChange={(e) => {\r\n                            var v = this.date.current.value;\r\n                            if (v.match(/^\\d{2}$/) !== null) {\r\n                                this.date.current.value = v + '/';\r\n                            } else if (v.match(/^\\d{2}\\/\\d{2}$/) !== null) {\r\n                                this.date.current.value = v + '/';\r\n                            }\r\n                            this.setState({ date: e.target.value});\r\n                        }\r\n                        }\r\n                        maxLength=\"10\"\r\n                    ></FormControl>\r\n                    <Button style={{ marginLeft: \"10px\" }} variant=\"outline-success\" onClick={(event) => { this.handleSubmit(this.state.todo_to_add, this.state.status, this.state.date, event); }}>Add To-do</Button>\r\n                </Form>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyNavbar;\r\n","import React, { Component } from 'react';\r\nimport { ListGroup, Button, FormControl } from 'react-bootstrap';\r\n\r\nclass MyTodos extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            todos: [],\r\n        }\r\n\r\n        this.allStorage = this.allStorage.bind(this);\r\n        this.renderTodo = this.renderTodo.bind(this);\r\n    }\r\n\r\n    allStorage() {\r\n\r\n        var values = [],\r\n            keys = Object.keys(localStorage),\r\n            i = keys.length;\r\n\r\n        while (i--) {\r\n            try {\r\n                let obj = JSON.parse(localStorage.getItem(keys[i]));\r\n                values.push({ id: keys[i], texto: obj.texto, status: obj.status, date: obj.date });\r\n            }\r\n            catch {\r\n                try {\r\n                    let obj = JSON.parse(localStorage.getItem(keys[i]));\r\n                    values.push({ id: keys[i], texto: obj.texto, status: obj.status });\r\n                } catch (e) {\r\n                    let texto = localStorage.getItem(keys[i]);\r\n                    values.push({ id: keys[i], texto: texto });\r\n                }\r\n            }\r\n        }\r\n\r\n        return values;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage) {\r\n            this.setState({\r\n                todos: this.allStorage(),\r\n            });\r\n        }\r\n    }\r\n\r\n    del(id) {\r\n        localStorage.removeItem(id);\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    changeStatus(id, newStatus) {\r\n        let item = JSON.parse(localStorage.getItem(id));\r\n        item.status = newStatus;\r\n        item = JSON.stringify(item);\r\n        localStorage.setItem(id, item);\r\n    }\r\n\r\n    renderTodo = (todo, index) => {\r\n\r\n        var renderText = (texto, date) => {\r\n            if (date) {\r\n                return `${texto} (${date})`;\r\n            }\r\n            else {\r\n                return texto;\r\n            }\r\n        }\r\n\r\n        var renderStatus = (status) => {\r\n            switch (status) {\r\n                case 'urgent':\r\n                    return <div style={{ 'marginLeft': '30px', 'backgroundColor': 'rgb(179, 0, 0)', 'width': '30px', 'height': '30px', 'borderRadius': '50%' }}></div>\r\n                case 'medium':\r\n                    return <div style={{ 'marginLeft': '30px', 'backgroundColor': 'rgb(209, 209, 0)', 'width': '30px', 'height': '30px', 'borderRadius': '50%' }}></div>\r\n                case 'noturgent':\r\n                    return <div style={{ 'marginLeft': '30px', 'backgroundColor': 'rgb(5, 160, 44)', 'width': '30px', 'height': '30px', 'borderRadius': '50%' }}></div>\r\n            }\r\n        }\r\n\r\n        var renderSelect = (status) => {\r\n            switch (status) {\r\n                case 'urgent':\r\n                    return <FormControl style={{ 'width': '100px', 'marginLeft': '30px' }} as=\"select\" custom onChange={(event) => { this.changeStatus(todo.id, event.target.value); window.location.reload() }}>\r\n                        <option selected id=\"urgent\" value=\"urgent\" >Urgent</option>\r\n                        <option id=\"medium\" value=\"medium\" >Medium</option>\r\n                        <option id=\"noturgent\" value=\"noturgent\" >Not urgent</option>\r\n                    </FormControl>\r\n                case 'medium':\r\n                    return <FormControl style={{ 'width': '100px', 'marginLeft': '30px' }} as=\"select\" custom onChange={(event) => { this.changeStatus(todo.id, event.target.value); window.location.reload() }}>\r\n                        <option id=\"urgent\" value=\"urgent\" >Urgent</option>\r\n                        <option selected id=\"medium\" value=\"medium\" >Medium</option>\r\n                        <option id=\"noturgent\" value=\"noturgent\" >Not urgent</option>\r\n                    </FormControl>\r\n                case 'noturgent':\r\n                    return <FormControl style={{ 'width': '100px', 'marginLeft': '30px' }} as=\"select\" custom onChange={(event) => { this.changeStatus(todo.id, event.target.value); window.location.reload() }}>\r\n                        <option id=\"urgent\" value=\"urgent\" >Urgent</option>\r\n                        <option id=\"medium\" value=\"medium\" >Medium</option>\r\n                        <option selected id=\"noturgent\" value=\"noturgent\" >Not urgent</option>\r\n                    </FormControl>\r\n            }\r\n        }\r\n\r\n        if (todo.status) {\r\n            return <ListGroup.Item key={index}>\r\n\r\n                <div style={{ 'display': 'flex', 'flexDirection': 'row' }} className=\"align\">\r\n                    {renderText(todo.texto, todo.date)}\r\n                    {renderStatus(todo.status)}\r\n                    {renderSelect(todo.status)}\r\n                </div>\r\n\r\n                <Button\r\n                    className='delete_button'\r\n                    variant='danger'\r\n                    style={{\r\n                        'float': 'right'\r\n                    }}\r\n                    onClick={() => { this.del(todo.id) }}\r\n                >\r\n                    X\r\n                </Button>\r\n\r\n            </ListGroup.Item>\r\n        }\r\n        else {\r\n            return <ListGroup.Item key={index}>\r\n                {todo.texto}\r\n\r\n                <Button\r\n                    className='delete_button'\r\n                    variant='danger'\r\n                    style={{\r\n                        'float': 'right'\r\n                    }}\r\n                    onClick={() => { this.del(todo.id) }}\r\n                >\r\n                    X\r\n        </Button>\r\n\r\n            </ListGroup.Item>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ListGroup>\r\n                {this.state.todos.map((todo, index) => {\r\n                    return this.renderTodo(todo, index);\r\n                })}\r\n            </ListGroup>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyTodos;\r\n","import React, { Component } from 'react';\r\n\r\nimport MyNavbar from './Components/MyNavbar';\r\nimport MyTodos from './Components/MyTodos';\r\n\r\nimport './App.scss';\r\n\r\nclass App extends Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      todos: []\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <MyNavbar/>\r\n        <MyTodos/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}